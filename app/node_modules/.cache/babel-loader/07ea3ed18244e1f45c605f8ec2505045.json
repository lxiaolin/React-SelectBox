{"ast":null,"code":"var _jsxFileName = \"D:\\\\WorkSpace(Web)\\\\reactPage\\\\app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  function deepClone(origin, target = {}) {\n    for (let prop in origin) {\n      if (origin.hasOwnProperty(prop)) {\n        //  for..in会遍历出原型中的属性\n        if (origin[prop] !== null && typeof origin[prop] === \"object\") {\n          Array.isArray(origin[prop]) ? target[prop] = [] : target[prop] = {};\n          deepClone(origin[prop], target[prop]);\n        } else {\n          target[prop] = origin[prop];\n        }\n      }\n    }\n\n    return target;\n  }\n\n  function getBoxItem() {\n    let BoxItem = [];\n\n    for (let i = 0; i < 8; i++) {\n      for (let j = 0; j < 12; j++) {\n        BoxItem.push({\n          col: j,\n          row: i,\n          selected: false\n        });\n      }\n    }\n\n    return BoxItem;\n  }\n\n  const ITEM_WIDTH = 68;\n  const ITEM_LEFT = 71;\n  const [BoxItem, setBoxItem] = useState(getBoxItem());\n  const BoxItemContainer = useRef(); //  Box容器\n\n  const [showSelectBox, setShowSelectBox] = useState(false); // 是否开启框选功能\n\n  const [startX, setStartX] = useState(0); //  鼠标按下起始位置横坐标\n\n  const [startY, setStartY] = useState(0); //  鼠标按下起始位置纵坐标\n\n  const [selectBoxWidth, setSelectBoxWidth] = useState(0); //  选择框宽度\n\n  const [selectBoxHeight, setSelectBoxHeight] = useState(0); //  选择框高度\n\n  const [selectBoxLeft, setSelectBoxLeft] = useState(0); //  选择框原点横坐标\n\n  const [selectBoxTop, setSelectBoxTop] = useState(0); //  选择框原点纵坐标\n\n  const [leftMouseDown, setLeftMouseDown] = useState(false); // 鼠标左键是否按下\n\n  let cloneBoxItem = [];\n\n  function mouseDownListener(e) {\n    if (e.buttons !== 1) {\n      //  判断鼠标左键按下\n      return;\n    }\n\n    e.preventDefault();\n    setLeftMouseDown(true);\n    setStartX(e.clientX - BoxItemContainer.current.offsetLeft); //  设置原点坐标为容器左上角\n\n    setStartY(e.clientY - BoxItemContainer.current.offsetTop);\n  } //  鼠标移动监听器\n\n\n  function mouseMoveListener(e) {\n    if (!leftMouseDown) {\n      return;\n    }\n\n    e.preventDefault();\n    let {\n      left,\n      top\n    } = BoxItemContainer.current.getBoundingClientRect(); //  容器上边(左边)到视窗上边(左边)的距离\n\n    let [nowX, nowY] = [e.clientX - left, e.clientY - top]; //  鼠标当前的位置\n\n    setSelectBoxLeft(Math.min(nowX, startX));\n    setSelectBoxTop(Math.min(nowY, startY));\n    setSelectBoxWidth(Math.abs(nowX - startX));\n    setSelectBoxHeight(Math.abs(nowY - startY));\n    setShowSelectBox(true);\n\n    if (selectBoxWidth > 10 && selectBoxHeight > 10) {\n      cloneBoxItem = deepClone(BoxItem, cloneBoxItem);\n      cloneBoxItem.forEach(well => well.selected = ITEM_WIDTH + well.col * ITEM_LEFT > selectBoxLeft && ITEM_WIDTH + well.row * ITEM_LEFT > selectBoxTop && well.col * ITEM_LEFT < selectBoxLeft + selectBoxWidth && well.row * ITEM_LEFT < selectBoxTop + selectBoxHeight);\n      setBoxItem(cloneBoxItem);\n    }\n  } //  鼠标左键抬起监听器\n\n\n  function mouseUpListener() {\n    if (!leftMouseDown) {\n      return;\n    }\n\n    setShowSelectBox(false);\n    setLeftMouseDown(false);\n  } //  鼠标移出BoxItem面板监听器\n\n\n  function mouseLeaveListener() {\n    if (!leftMouseDown) {\n      return;\n    }\n\n    setShowSelectBox(false);\n    setLeftMouseDown(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseLeave: mouseLeaveListener,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      ref: BoxItemContainer,\n      onMouseDown: e => mouseDownListener(e),\n      onMouseMove: e => mouseMoveListener(e),\n      onMouseUp: mouseUpListener,\n      children: [BoxItem.map(well => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          borderStyle: well.selected ? \"dashed\" : \"solid\"\n        }\n      }, well.row * 12 + well.col, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this)), showSelectBox ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SelectBox\",\n        style: {\n          left: `${selectBoxLeft}px`,\n          top: `${selectBoxTop}px`,\n          width: `${selectBoxWidth}px`,\n          height: `${selectBoxHeight}px`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ykMX1sYQ95Auj/wfyWuuycZqFDg=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/WorkSpace(Web)/reactPage/app/src/App.js"],"names":["React","useRef","useState","App","deepClone","origin","target","prop","hasOwnProperty","Array","isArray","getBoxItem","BoxItem","i","j","push","col","row","selected","ITEM_WIDTH","ITEM_LEFT","setBoxItem","BoxItemContainer","showSelectBox","setShowSelectBox","startX","setStartX","startY","setStartY","selectBoxWidth","setSelectBoxWidth","selectBoxHeight","setSelectBoxHeight","selectBoxLeft","setSelectBoxLeft","selectBoxTop","setSelectBoxTop","leftMouseDown","setLeftMouseDown","cloneBoxItem","mouseDownListener","e","buttons","preventDefault","clientX","current","offsetLeft","clientY","offsetTop","mouseMoveListener","left","top","getBoundingClientRect","nowX","nowY","Math","min","abs","forEach","well","mouseUpListener","mouseLeaveListener","map","borderStyle","width","height"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\n\nimport \"./index.css\"\n\nexport default function App() {\n  function deepClone(origin, target = {}) {\n    for (let prop in origin) {\n      if (origin.hasOwnProperty(prop)) {  //  for..in会遍历出原型中的属性\n        if (origin[prop] !== null && typeof (origin[prop]) === \"object\") {\n          Array.isArray(origin[prop]) ? target[prop] = [] : target[prop] = {};\n          deepClone(origin[prop], target[prop]);\n        } else {\n          target[prop] = origin[prop];\n        }\n      }\n    }\n    return target;\n  }\n\n  function getBoxItem() {\n    let BoxItem = [];\n    for (let i = 0; i < 8; i++) {\n      for (let j = 0; j < 12; j++) {\n        BoxItem.push({\n          col: j,\n          row: i,\n          selected: false,\n        });\n      }\n    }\n    return BoxItem;\n  }\n\n  const ITEM_WIDTH = 68;\n  const ITEM_LEFT = 71;\n  const [BoxItem, setBoxItem] = useState(getBoxItem());\n  const BoxItemContainer = useRef();  //  Box容器\n  const [showSelectBox, setShowSelectBox] = useState(false);  // 是否开启框选功能\n  const [startX, setStartX] = useState(0);  //  鼠标按下起始位置横坐标\n  const [startY, setStartY] = useState(0);  //  鼠标按下起始位置纵坐标\n  const [selectBoxWidth, setSelectBoxWidth] = useState(0);  //  选择框宽度\n  const [selectBoxHeight, setSelectBoxHeight] = useState(0);  //  选择框高度\n  const [selectBoxLeft, setSelectBoxLeft] = useState(0);  //  选择框原点横坐标\n  const [selectBoxTop, setSelectBoxTop] = useState(0);  //  选择框原点纵坐标\n  const [leftMouseDown, setLeftMouseDown] = useState(false);  // 鼠标左键是否按下\n  let cloneBoxItem = [];\n\n\n  function mouseDownListener(e) {\n    if (e.buttons !== 1) {      //  判断鼠标左键按下\n      return;\n    }\n    e.preventDefault();\n    setLeftMouseDown(true);\n    setStartX(e.clientX - BoxItemContainer.current.offsetLeft); //  设置原点坐标为容器左上角\n    setStartY(e.clientY - BoxItemContainer.current.offsetTop);\n  }\n\n  //  鼠标移动监听器\n  function mouseMoveListener(e) {\n    if (!leftMouseDown) {\n      return;\n    }\n    e.preventDefault();\n    let {left, top} = BoxItemContainer.current.getBoundingClientRect(); //  容器上边(左边)到视窗上边(左边)的距离\n    let [nowX, nowY] = [e.clientX - left, e.clientY - top]; //  鼠标当前的位置\n    setSelectBoxLeft(Math.min(nowX, startX));\n    setSelectBoxTop(Math.min(nowY, startY));\n    setSelectBoxWidth(Math.abs(nowX - startX));\n    setSelectBoxHeight(Math.abs(nowY - startY));\n    setShowSelectBox(true);\n    if (selectBoxWidth > 10 && selectBoxHeight > 10) {\n      cloneBoxItem = deepClone(BoxItem, cloneBoxItem);\n      cloneBoxItem.forEach(well => well.selected = (ITEM_WIDTH + well.col * ITEM_LEFT) > selectBoxLeft\n        && (ITEM_WIDTH + well.row * ITEM_LEFT) > selectBoxTop\n        && well.col * ITEM_LEFT < selectBoxLeft + selectBoxWidth\n        && well.row * ITEM_LEFT < selectBoxTop + selectBoxHeight);\n      setBoxItem(cloneBoxItem);\n    }\n  }\n\n  //  鼠标左键抬起监听器\n  function mouseUpListener() {\n    if (!leftMouseDown) {\n      return;\n    }\n    setShowSelectBox(false);\n    setLeftMouseDown(false);\n  }\n\n  //  鼠标移出BoxItem面板监听器\n  function mouseLeaveListener() {\n    if (!leftMouseDown) {\n      return;\n    }\n    setShowSelectBox(false);\n    setLeftMouseDown(false);\n  }\n\n  return (\n    <div onMouseLeave={mouseLeaveListener}>\n      <div className=\"box\"\n           ref={BoxItemContainer}\n           onMouseDown={e => mouseDownListener(e)}\n           onMouseMove={e => mouseMoveListener(e)}\n           onMouseUp={mouseUpListener}\n      >\n        {\n          BoxItem.map(well => (\n            <div key={well.row * 12 + well.col}\n                 style={{borderStyle: well.selected ? \"dashed\" : \"solid\"}}\n            >\n            </div>\n          ))\n        }\n        {\n          showSelectBox\n            ? <div className=\"SelectBox\" style={{left: `${selectBoxLeft}px`, top: `${selectBoxTop}px`, width: `${selectBoxWidth}px`, height: `${selectBoxHeight}px`}}/>\n            : null\n        }\n      </div>\n    </div>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}