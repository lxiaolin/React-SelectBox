{"ast":null,"code":"var _jsxFileName = \"D:\\\\WorkSpace(Web)\\\\reactPage\\\\app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  function getWells() {\n    let wells = [];\n\n    for (let i = 0; i < 8; i++) {\n      for (let j = 0; j < 12; j++) {\n        wells.push({\n          col: j,\n          row: i,\n          selected: false\n        });\n      }\n    }\n\n    return wells;\n  }\n\n  const [wells, setWells] = useState(getWells());\n\n  function mouseDownListener(e) {\n    if (e.buttons !== 1) {\n      //  判断鼠标左键按下\n      return;\n    }\n\n    e.preventDefault();\n\n    if (e.ctrlKey) {\n      //  按下ctrl\n      wells.forEach((well, index) => well.selected && cloneSelectedWells.push(index));\n      setSelectedWells([...new Set(cloneSelectedWells)]); //  记录先前选中的wells\n    } else if (e.shiftKey) {\n      //  按下shift\n      wells.forEach((well, index) => well.selected && cloneSelectedWells.push(index));\n      setSelectedWells([...new Set(cloneSelectedWells)]); //  记录先前选中的wells\n\n      setLeftMouseDown(true);\n      setStartX(e.clientX - wellsContainer.current.offsetLeft); //  设置原点坐标为容器左上角\n\n      setStartY(e.clientY - wellsContainer.current.offsetTop);\n    } else {\n      //  不按ctrl和shift\n      setSelectedWells([]);\n      setLeftMouseDown(true);\n      setStartX(e.clientX - wellsContainer.current.offsetLeft); //  设置原点坐标为容器左上角\n\n      setStartY(e.clientY - wellsContainer.current.offsetTop);\n    }\n  } //  鼠标移动监听器\n\n\n  function mouseMoveListener(e) {\n    if (!leftMouseDown) {\n      return;\n    }\n\n    e.preventDefault();\n    let {\n      left,\n      top\n    } = wellsContainer.current.getBoundingClientRect(); //  容器上边(左边)到视窗上边(左边)的距离\n\n    let [nowX, nowY] = [e.clientX - left, e.clientY - top]; //  鼠标当前的位置\n\n    setSelectBoxLeft(Math.min(nowX, startX));\n    setSelectBoxTop(Math.min(nowY, startY));\n    setSelectBoxWidth(Math.abs(nowX - startX));\n    setSelectBoxHeight(Math.abs(nowY - startY));\n    setShowSelectBox(true);\n\n    if (selectBoxWidth > 10 && selectBoxHeight > 10) {\n      cloneWells = deepClone(wells, cloneWells);\n      cloneWells.forEach(well => well.selected = WELL_WIDTH + well.col * WELL_LEFT > selectBoxLeft && WELL_WIDTH + well.row * WELL_LEFT > selectBoxTop && well.col * WELL_LEFT < selectBoxLeft + selectBoxWidth && well.row * WELL_LEFT < selectBoxTop + selectBoxHeight);\n      (e.ctrlKey || e.shiftKey) && selectedWells.forEach(well => cloneWells[well].selected = true); //  将先前选中的wells重新设置为true\n\n      setWells(cloneWells);\n    }\n  } //  鼠标左键抬起监听器\n\n\n  function mouseUpListener() {\n    if (!leftMouseDown) {\n      return;\n    }\n\n    setShowSelectBox(false);\n    setLeftMouseDown(false);\n    selectTargetAuto(wells);\n    selectSampleOrGroupAuto(wells, deepClone(sample, cloneSample), setSample, \"sampleName\");\n    selectSampleOrGroupAuto(wells, deepClone(group, cloneGroup), setGroup, \"groupName\");\n  } //  鼠标移出wells面板监听器\n\n\n  function mouseLeaveListener() {\n    if (!leftMouseDown) {\n      return;\n    }\n\n    setShowSelectBox(false);\n    setLeftMouseDown(false);\n    selectTargetAuto(wells);\n    selectSampleOrGroupAuto(wells, deepClone(sample, cloneSample), setSample, \"sampleName\");\n    selectSampleOrGroupAuto(wells, deepClone(group, cloneGroup), setGroup, \"groupName\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\" // ref={wellsContainer}\n      //    onMouseDown={e => mouseDownListener(e)}\n      //    onMouseMove={e => mouseMoveListener(e)}\n      //    onMouseUp={mouseUpListener}\n      ,\n      children: wells.map(well => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          borderStyle: well.selected ? \"dashed\" : \"solid\"\n        }\n      }, well.row * 12 + well.col, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"GrwkvSQpEu756OCX1cN4HWvyNcU=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/WorkSpace(Web)/reactPage/app/src/App.js"],"names":["React","useState","App","getWells","wells","i","j","push","col","row","selected","setWells","mouseDownListener","e","buttons","preventDefault","ctrlKey","forEach","well","index","cloneSelectedWells","setSelectedWells","Set","shiftKey","setLeftMouseDown","setStartX","clientX","wellsContainer","current","offsetLeft","setStartY","clientY","offsetTop","mouseMoveListener","leftMouseDown","left","top","getBoundingClientRect","nowX","nowY","setSelectBoxLeft","Math","min","startX","setSelectBoxTop","startY","setSelectBoxWidth","abs","setSelectBoxHeight","setShowSelectBox","selectBoxWidth","selectBoxHeight","cloneWells","deepClone","WELL_WIDTH","WELL_LEFT","selectBoxLeft","selectBoxTop","selectedWells","mouseUpListener","selectTargetAuto","selectSampleOrGroupAuto","sample","cloneSample","setSample","group","cloneGroup","setGroup","mouseLeaveListener","map","borderStyle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAO,aAAP;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,WAASC,QAAT,GAAoB;AAClB,QAAIC,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BF,QAAAA,KAAK,CAACG,IAAN,CAAW;AACTC,UAAAA,GAAG,EAAEF,CADI;AAETG,UAAAA,GAAG,EAAEJ,CAFI;AAGTK,UAAAA,QAAQ,EAAE;AAHD,SAAX;AAKD;AACF;;AACD,WAAON,KAAP;AACD;;AACD,QAAM,CAACA,KAAD,EAAQO,QAAR,IAAoBV,QAAQ,CAACE,QAAQ,EAAT,CAAlC;;AAEA,WAASS,iBAAT,CAA2BC,CAA3B,EAA8B;AAC5B,QAAIA,CAAC,CAACC,OAAF,KAAc,CAAlB,EAAqB;AAAO;AAC1B;AACD;;AACDD,IAAAA,CAAC,CAACE,cAAF;;AACA,QAAIF,CAAC,CAACG,OAAN,EAAe;AAAG;AAChBZ,MAAAA,KAAK,CAACa,OAAN,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiBD,IAAI,CAACR,QAAL,IAAiBU,kBAAkB,CAACb,IAAnB,CAAwBY,KAAxB,CAAhD;AACAE,MAAAA,gBAAgB,CAAC,CAAC,GAAG,IAAIC,GAAJ,CAAQF,kBAAR,CAAJ,CAAD,CAAhB,CAFa,CAEuC;AACrD,KAHD,MAGO,IAAIP,CAAC,CAACU,QAAN,EAAgB;AAAG;AACxBnB,MAAAA,KAAK,CAACa,OAAN,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiBD,IAAI,CAACR,QAAL,IAAiBU,kBAAkB,CAACb,IAAnB,CAAwBY,KAAxB,CAAhD;AACAE,MAAAA,gBAAgB,CAAC,CAAC,GAAG,IAAIC,GAAJ,CAAQF,kBAAR,CAAJ,CAAD,CAAhB,CAFqB,CAE+B;;AACpDI,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAC,MAAAA,SAAS,CAACZ,CAAC,CAACa,OAAF,GAAYC,cAAc,CAACC,OAAf,CAAuBC,UAApC,CAAT,CAJqB,CAIqC;;AAC1DC,MAAAA,SAAS,CAACjB,CAAC,CAACkB,OAAF,GAAYJ,cAAc,CAACC,OAAf,CAAuBI,SAApC,CAAT;AACD,KANM,MAMA;AAAG;AACRX,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAG,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAC,MAAAA,SAAS,CAACZ,CAAC,CAACa,OAAF,GAAYC,cAAc,CAACC,OAAf,CAAuBC,UAApC,CAAT,CAHK,CAGqD;;AAC1DC,MAAAA,SAAS,CAACjB,CAAC,CAACkB,OAAF,GAAYJ,cAAc,CAACC,OAAf,CAAuBI,SAApC,CAAT;AACD;AACF,GApC2B,CAsC5B;;;AACA,WAASC,iBAAT,CAA2BpB,CAA3B,EAA8B;AAC5B,QAAI,CAACqB,aAAL,EAAoB;AAClB;AACD;;AACDrB,IAAAA,CAAC,CAACE,cAAF;AACA,QAAI;AAACoB,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAcT,cAAc,CAACC,OAAf,CAAuBS,qBAAvB,EAAlB,CAL4B,CAKsC;;AAClE,QAAI,CAACC,IAAD,EAAOC,IAAP,IAAe,CAAC1B,CAAC,CAACa,OAAF,GAAYS,IAAb,EAAmBtB,CAAC,CAACkB,OAAF,GAAYK,GAA/B,CAAnB,CAN4B,CAM4B;;AACxDI,IAAAA,gBAAgB,CAACC,IAAI,CAACC,GAAL,CAASJ,IAAT,EAAeK,MAAf,CAAD,CAAhB;AACAC,IAAAA,eAAe,CAACH,IAAI,CAACC,GAAL,CAASH,IAAT,EAAeM,MAAf,CAAD,CAAf;AACAC,IAAAA,iBAAiB,CAACL,IAAI,CAACM,GAAL,CAAST,IAAI,GAAGK,MAAhB,CAAD,CAAjB;AACAK,IAAAA,kBAAkB,CAACP,IAAI,CAACM,GAAL,CAASR,IAAI,GAAGM,MAAhB,CAAD,CAAlB;AACAI,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;;AACA,QAAIC,cAAc,GAAG,EAAjB,IAAuBC,eAAe,GAAG,EAA7C,EAAiD;AAC/CC,MAAAA,UAAU,GAAGC,SAAS,CAACjD,KAAD,EAAQgD,UAAR,CAAtB;AACAA,MAAAA,UAAU,CAACnC,OAAX,CAAmBC,IAAI,IAAIA,IAAI,CAACR,QAAL,GAAiB4C,UAAU,GAAGpC,IAAI,CAACV,GAAL,GAAW+C,SAAzB,GAAsCC,aAAtC,IACrCF,UAAU,GAAGpC,IAAI,CAACT,GAAL,GAAW8C,SAAzB,GAAsCE,YADA,IAEtCvC,IAAI,CAACV,GAAL,GAAW+C,SAAX,GAAuBC,aAAa,GAAGN,cAFD,IAGtChC,IAAI,CAACT,GAAL,GAAW8C,SAAX,GAAuBE,YAAY,GAAGN,eAH3C;AAIA,OAACtC,CAAC,CAACG,OAAF,IAAaH,CAAC,CAACU,QAAhB,KAA6BmC,aAAa,CAACzC,OAAd,CAAsBC,IAAI,IAAIkC,UAAU,CAAClC,IAAD,CAAV,CAAiBR,QAAjB,GAA4B,IAA1D,CAA7B,CAN+C,CAMgD;;AAC/FC,MAAAA,QAAQ,CAACyC,UAAD,CAAR;AACD;AACF,GA5D2B,CA8D5B;;;AACA,WAASO,eAAT,GAA2B;AACzB,QAAI,CAACzB,aAAL,EAAoB;AAClB;AACD;;AACDe,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAzB,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAoC,IAAAA,gBAAgB,CAACxD,KAAD,CAAhB;AACAyD,IAAAA,uBAAuB,CAACzD,KAAD,EAAQiD,SAAS,CAACS,MAAD,EAASC,WAAT,CAAjB,EAAwCC,SAAxC,EAAmD,YAAnD,CAAvB;AACAH,IAAAA,uBAAuB,CAACzD,KAAD,EAAQiD,SAAS,CAACY,KAAD,EAAQC,UAAR,CAAjB,EAAsCC,QAAtC,EAAgD,WAAhD,CAAvB;AACD,GAxE2B,CA0E5B;;;AACA,WAASC,kBAAT,GAA8B;AAC5B,QAAI,CAAClC,aAAL,EAAoB;AAClB;AACD;;AACDe,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAzB,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAoC,IAAAA,gBAAgB,CAACxD,KAAD,CAAhB;AACAyD,IAAAA,uBAAuB,CAACzD,KAAD,EAAQiD,SAAS,CAACS,MAAD,EAASC,WAAT,CAAjB,EAAwCC,SAAxC,EAAmD,YAAnD,CAAvB;AACAH,IAAAA,uBAAuB,CAACzD,KAAD,EAAQiD,SAAS,CAACY,KAAD,EAAQC,UAAR,CAAjB,EAAsCC,QAAtC,EAAgD,WAAhD,CAAvB;AACD;;AACD,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf,CACE;AACA;AACA;AACA;AAJF;AAAA,gBAOI/D,KAAK,CAACiE,GAAN,CAAUnD,IAAI,iBACZ;AACK,QAAA,KAAK,EAAE;AAACoD,UAAAA,WAAW,EAAEpD,IAAI,CAACR,QAAL,GAAgB,QAAhB,GAA2B;AAAzC;AADZ,SAAUQ,IAAI,CAACT,GAAL,GAAW,EAAX,GAAgBS,IAAI,CAACV,GAA/B;AAAA;AAAA;AAAA;AAAA,cADF;AAPJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAxGuBN,G;;KAAAA,G","sourcesContent":["import React, {useState} from 'react';\n\nimport \"./index.css\"\n\nexport default function App() {\n  function getWells() {\n    let wells = [];\n    for (let i = 0; i < 8; i++) {\n      for (let j = 0; j < 12; j++) {\n        wells.push({\n          col: j,\n          row: i,\n          selected: false,\n        });\n      }\n    }\n    return wells;\n  }\n  const [wells, setWells] = useState(getWells());\n\n  function mouseDownListener(e) {\n    if (e.buttons !== 1) {      //  判断鼠标左键按下\n      return;\n    }\n    e.preventDefault();\n    if (e.ctrlKey) {  //  按下ctrl\n      wells.forEach((well, index) => well.selected && cloneSelectedWells.push(index));\n      setSelectedWells([...new Set(cloneSelectedWells)]); //  记录先前选中的wells\n    } else if (e.shiftKey) {  //  按下shift\n      wells.forEach((well, index) => well.selected && cloneSelectedWells.push(index));\n      setSelectedWells([...new Set(cloneSelectedWells)]); //  记录先前选中的wells\n      setLeftMouseDown(true);\n      setStartX(e.clientX - wellsContainer.current.offsetLeft); //  设置原点坐标为容器左上角\n      setStartY(e.clientY - wellsContainer.current.offsetTop);\n    } else {  //  不按ctrl和shift\n      setSelectedWells([]);\n      setLeftMouseDown(true);\n      setStartX(e.clientX - wellsContainer.current.offsetLeft); //  设置原点坐标为容器左上角\n      setStartY(e.clientY - wellsContainer.current.offsetTop);\n    }\n  }\n\n  //  鼠标移动监听器\n  function mouseMoveListener(e) {\n    if (!leftMouseDown) {\n      return;\n    }\n    e.preventDefault();\n    let {left, top} = wellsContainer.current.getBoundingClientRect(); //  容器上边(左边)到视窗上边(左边)的距离\n    let [nowX, nowY] = [e.clientX - left, e.clientY - top]; //  鼠标当前的位置\n    setSelectBoxLeft(Math.min(nowX, startX));\n    setSelectBoxTop(Math.min(nowY, startY));\n    setSelectBoxWidth(Math.abs(nowX - startX));\n    setSelectBoxHeight(Math.abs(nowY - startY));\n    setShowSelectBox(true);\n    if (selectBoxWidth > 10 && selectBoxHeight > 10) {\n      cloneWells = deepClone(wells, cloneWells);\n      cloneWells.forEach(well => well.selected = (WELL_WIDTH + well.col * WELL_LEFT) > selectBoxLeft\n        && (WELL_WIDTH + well.row * WELL_LEFT) > selectBoxTop\n        && well.col * WELL_LEFT < selectBoxLeft + selectBoxWidth\n        && well.row * WELL_LEFT < selectBoxTop + selectBoxHeight);\n      (e.ctrlKey || e.shiftKey) && selectedWells.forEach(well => cloneWells[well].selected = true);  //  将先前选中的wells重新设置为true\n      setWells(cloneWells);\n    }\n  }\n\n  //  鼠标左键抬起监听器\n  function mouseUpListener() {\n    if (!leftMouseDown) {\n      return;\n    }\n    setShowSelectBox(false);\n    setLeftMouseDown(false);\n    selectTargetAuto(wells);\n    selectSampleOrGroupAuto(wells, deepClone(sample, cloneSample), setSample, \"sampleName\");\n    selectSampleOrGroupAuto(wells, deepClone(group, cloneGroup), setGroup, \"groupName\");\n  }\n\n  //  鼠标移出wells面板监听器\n  function mouseLeaveListener() {\n    if (!leftMouseDown) {\n      return;\n    }\n    setShowSelectBox(false);\n    setLeftMouseDown(false);\n    selectTargetAuto(wells);\n    selectSampleOrGroupAuto(wells, deepClone(sample, cloneSample), setSample, \"sampleName\");\n    selectSampleOrGroupAuto(wells, deepClone(group, cloneGroup), setGroup, \"groupName\");\n  }\n  return (\n    <div>\n      <div className=\"box\"\n        // ref={wellsContainer}\n        //    onMouseDown={e => mouseDownListener(e)}\n        //    onMouseMove={e => mouseMoveListener(e)}\n        //    onMouseUp={mouseUpListener}\n      >\n        {\n          wells.map(well => (\n            <div key={well.row * 12 + well.col}\n                 style={{borderStyle: well.selected ? \"dashed\" : \"solid\"}}\n            >\n            </div>\n          ))\n        }\n      </div>\n    </div>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}