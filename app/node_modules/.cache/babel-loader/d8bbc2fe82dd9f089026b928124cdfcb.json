{"ast":null,"code":"var _jsxFileName = \"D:\\\\WorkSpace(Web)\\\\reactPage\\\\app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  function getWells() {\n    let wells = [];\n\n    for (let i = 0; i < 8; i++) {\n      for (let j = 0; j < 12; j++) {\n        wells.push({\n          col: j,\n          row: i,\n          selected: false\n        });\n      }\n    }\n\n    return wells;\n  }\n\n  const [wells, setWells] = useState(getWells());\n  const wellsContainer = useRef(); //  Wells容器\n\n  const [showSelectBox, setShowSelectBox] = useState(false); // 是否开启框选功能\n\n  const [startX, setStartX] = useState(0); //  鼠标按下起始位置横坐标\n\n  const [startY, setStartY] = useState(0); //  鼠标按下起始位置纵坐标\n\n  const [selectBoxWidth, setSelectBoxWidth] = useState(0); //  选择框宽度\n\n  const [selectBoxHeight, setSelectBoxHeight] = useState(0); //  选择框高度\n\n  const [selectBoxLeft, setSelectBoxLeft] = useState(0); //  选择框原点横坐标\n\n  const [selectBoxTop, setSelectBoxTop] = useState(0); //  选择框原点纵坐标\n\n  const [leftMouseDown, setLeftMouseDown] = useState(false); // 鼠标左键是否按下\n\n  function mouseDownListener(e) {\n    if (e.buttons !== 1) {\n      //  判断鼠标左键按下\n      return;\n    }\n\n    e.preventDefault();\n\n    if (e.ctrlKey) {\n      //  按下ctrl\n      wells.forEach((well, index) => well.selected && cloneSelectedWells.push(index));\n      setSelectedWells([...new Set(cloneSelectedWells)]); //  记录先前选中的wells\n    } else if (e.shiftKey) {\n      //  按下shift\n      wells.forEach((well, index) => well.selected && cloneSelectedWells.push(index));\n      setSelectedWells([...new Set(cloneSelectedWells)]); //  记录先前选中的wells\n\n      setLeftMouseDown(true);\n      setStartX(e.clientX - wellsContainer.current.offsetLeft); //  设置原点坐标为容器左上角\n\n      setStartY(e.clientY - wellsContainer.current.offsetTop);\n    } else {\n      //  不按ctrl和shift\n      setSelectedWells([]);\n      setLeftMouseDown(true);\n      setStartX(e.clientX - wellsContainer.current.offsetLeft); //  设置原点坐标为容器左上角\n\n      setStartY(e.clientY - wellsContainer.current.offsetTop);\n    }\n  } //  鼠标移动监听器\n\n\n  function mouseMoveListener(e) {\n    if (!leftMouseDown) {\n      return;\n    }\n\n    e.preventDefault();\n    let {\n      left,\n      top\n    } = wellsContainer.current.getBoundingClientRect(); //  容器上边(左边)到视窗上边(左边)的距离\n\n    let [nowX, nowY] = [e.clientX - left, e.clientY - top]; //  鼠标当前的位置\n\n    setSelectBoxLeft(Math.min(nowX, startX));\n    setSelectBoxTop(Math.min(nowY, startY));\n    setSelectBoxWidth(Math.abs(nowX - startX));\n    setSelectBoxHeight(Math.abs(nowY - startY));\n    setShowSelectBox(true);\n\n    if (selectBoxWidth > 10 && selectBoxHeight > 10) {\n      cloneWells = deepClone(wells, cloneWells);\n      cloneWells.forEach(well => well.selected = WELL_WIDTH + well.col * WELL_LEFT > selectBoxLeft && WELL_WIDTH + well.row * WELL_LEFT > selectBoxTop && well.col * WELL_LEFT < selectBoxLeft + selectBoxWidth && well.row * WELL_LEFT < selectBoxTop + selectBoxHeight);\n      (e.ctrlKey || e.shiftKey) && selectedWells.forEach(well => cloneWells[well].selected = true); //  将先前选中的wells重新设置为true\n\n      setWells(cloneWells);\n    }\n  } //  鼠标左键抬起监听器\n\n\n  function mouseUpListener() {\n    if (!leftMouseDown) {\n      return;\n    }\n\n    setShowSelectBox(false);\n    setLeftMouseDown(false);\n    selectTargetAuto(wells);\n    selectSampleOrGroupAuto(wells, deepClone(sample, cloneSample), setSample, \"sampleName\");\n    selectSampleOrGroupAuto(wells, deepClone(group, cloneGroup), setGroup, \"groupName\");\n  } //  鼠标移出wells面板监听器\n\n\n  function mouseLeaveListener() {\n    if (!leftMouseDown) {\n      return;\n    }\n\n    setShowSelectBox(false);\n    setLeftMouseDown(false);\n    selectTargetAuto(wells);\n    selectSampleOrGroupAuto(wells, deepClone(sample, cloneSample), setSample, \"sampleName\");\n    selectSampleOrGroupAuto(wells, deepClone(group, cloneGroup), setGroup, \"groupName\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      ref: wellsContainer,\n      onMouseDown: e => mouseDownListener(e),\n      onMouseMove: e => mouseMoveListener(e),\n      onMouseUp: mouseUpListener,\n      children: wells.map(well => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          borderStyle: well.selected ? \"dashed\" : \"solid\"\n        }\n      }, well.row * 12 + well.col, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"4l5kTQ+i5hbgGiQgxkfYXosTMps=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/WorkSpace(Web)/reactPage/app/src/App.js"],"names":["React","useState","App","getWells","wells","i","j","push","col","row","selected","setWells","wellsContainer","useRef","showSelectBox","setShowSelectBox","startX","setStartX","startY","setStartY","selectBoxWidth","setSelectBoxWidth","selectBoxHeight","setSelectBoxHeight","selectBoxLeft","setSelectBoxLeft","selectBoxTop","setSelectBoxTop","leftMouseDown","setLeftMouseDown","mouseDownListener","e","buttons","preventDefault","ctrlKey","forEach","well","index","cloneSelectedWells","setSelectedWells","Set","shiftKey","clientX","current","offsetLeft","clientY","offsetTop","mouseMoveListener","left","top","getBoundingClientRect","nowX","nowY","Math","min","abs","cloneWells","deepClone","WELL_WIDTH","WELL_LEFT","selectedWells","mouseUpListener","selectTargetAuto","selectSampleOrGroupAuto","sample","cloneSample","setSample","group","cloneGroup","setGroup","mouseLeaveListener","map","borderStyle"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\nimport \"./index.css\"\n\nexport default function App() {\n  function getWells() {\n    let wells = [];\n    for (let i = 0; i < 8; i++) {\n      for (let j = 0; j < 12; j++) {\n        wells.push({\n          col: j,\n          row: i,\n          selected: false,\n        });\n      }\n    }\n    return wells;\n  }\n  const [wells, setWells] = useState(getWells());\n  const wellsContainer = useRef();  //  Wells容器\n  const [showSelectBox, setShowSelectBox] = useState(false);  // 是否开启框选功能\n  const [startX, setStartX] = useState(0);  //  鼠标按下起始位置横坐标\n  const [startY, setStartY] = useState(0);  //  鼠标按下起始位置纵坐标\n  const [selectBoxWidth, setSelectBoxWidth] = useState(0);  //  选择框宽度\n  const [selectBoxHeight, setSelectBoxHeight] = useState(0);  //  选择框高度\n  const [selectBoxLeft, setSelectBoxLeft] = useState(0);  //  选择框原点横坐标\n  const [selectBoxTop, setSelectBoxTop] = useState(0);  //  选择框原点纵坐标\n  const [leftMouseDown, setLeftMouseDown] = useState(false);  // 鼠标左键是否按下\n\n  function mouseDownListener(e) {\n    if (e.buttons !== 1) {      //  判断鼠标左键按下\n      return;\n    }\n    e.preventDefault();\n    if (e.ctrlKey) {  //  按下ctrl\n      wells.forEach((well, index) => well.selected && cloneSelectedWells.push(index));\n      setSelectedWells([...new Set(cloneSelectedWells)]); //  记录先前选中的wells\n    } else if (e.shiftKey) {  //  按下shift\n      wells.forEach((well, index) => well.selected && cloneSelectedWells.push(index));\n      setSelectedWells([...new Set(cloneSelectedWells)]); //  记录先前选中的wells\n      setLeftMouseDown(true);\n      setStartX(e.clientX - wellsContainer.current.offsetLeft); //  设置原点坐标为容器左上角\n      setStartY(e.clientY - wellsContainer.current.offsetTop);\n    } else {  //  不按ctrl和shift\n      setSelectedWells([]);\n      setLeftMouseDown(true);\n      setStartX(e.clientX - wellsContainer.current.offsetLeft); //  设置原点坐标为容器左上角\n      setStartY(e.clientY - wellsContainer.current.offsetTop);\n    }\n  }\n\n  //  鼠标移动监听器\n  function mouseMoveListener(e) {\n    if (!leftMouseDown) {\n      return;\n    }\n    e.preventDefault();\n    let {left, top} = wellsContainer.current.getBoundingClientRect(); //  容器上边(左边)到视窗上边(左边)的距离\n    let [nowX, nowY] = [e.clientX - left, e.clientY - top]; //  鼠标当前的位置\n    setSelectBoxLeft(Math.min(nowX, startX));\n    setSelectBoxTop(Math.min(nowY, startY));\n    setSelectBoxWidth(Math.abs(nowX - startX));\n    setSelectBoxHeight(Math.abs(nowY - startY));\n    setShowSelectBox(true);\n    if (selectBoxWidth > 10 && selectBoxHeight > 10) {\n      cloneWells = deepClone(wells, cloneWells);\n      cloneWells.forEach(well => well.selected = (WELL_WIDTH + well.col * WELL_LEFT) > selectBoxLeft\n        && (WELL_WIDTH + well.row * WELL_LEFT) > selectBoxTop\n        && well.col * WELL_LEFT < selectBoxLeft + selectBoxWidth\n        && well.row * WELL_LEFT < selectBoxTop + selectBoxHeight);\n      (e.ctrlKey || e.shiftKey) && selectedWells.forEach(well => cloneWells[well].selected = true);  //  将先前选中的wells重新设置为true\n      setWells(cloneWells);\n    }\n  }\n\n  //  鼠标左键抬起监听器\n  function mouseUpListener() {\n    if (!leftMouseDown) {\n      return;\n    }\n    setShowSelectBox(false);\n    setLeftMouseDown(false);\n    selectTargetAuto(wells);\n    selectSampleOrGroupAuto(wells, deepClone(sample, cloneSample), setSample, \"sampleName\");\n    selectSampleOrGroupAuto(wells, deepClone(group, cloneGroup), setGroup, \"groupName\");\n  }\n\n  //  鼠标移出wells面板监听器\n  function mouseLeaveListener() {\n    if (!leftMouseDown) {\n      return;\n    }\n    setShowSelectBox(false);\n    setLeftMouseDown(false);\n    selectTargetAuto(wells);\n    selectSampleOrGroupAuto(wells, deepClone(sample, cloneSample), setSample, \"sampleName\");\n    selectSampleOrGroupAuto(wells, deepClone(group, cloneGroup), setGroup, \"groupName\");\n  }\n  return (\n    <div>\n      <div className=\"box\"\n           ref={wellsContainer}\n           onMouseDown={e => mouseDownListener(e)}\n           onMouseMove={e => mouseMoveListener(e)}\n           onMouseUp={mouseUpListener}\n      >\n        {\n          wells.map(well => (\n            <div key={well.row * 12 + well.col}\n                 style={{borderStyle: well.selected ? \"dashed\" : \"solid\"}}\n            >\n            </div>\n          ))\n        }\n      </div>\n    </div>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}